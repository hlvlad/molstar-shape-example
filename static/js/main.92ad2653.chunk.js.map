{"version":3,"sources":["logo.svg","cubes/representation.ts","cubes/behavior.ts","MolstarDemoViewer.ts","Viewer3D.tsx","App.js","reportWebVitals.js","index.js"],"names":["TubeParams","Mesh","Params","doubleSided","PD","Boolean","TubeVisuals","ctx","getParams","ShapeRepresentation","getTubeShape","Utils","data","props","shape","geo","mesh","builderState","MeshBuilder","createState","points","i","length","addSphere","Vec3","create","size","addCylinder","DefaultCylinderProps","radiusTop","radiusBottom","last_idx","getMesh","getTubeMesh","geometry","Shape","index","Color","fromRgb","TubeRepresentation","Representation","createMulti","StateBuilder","SquareParams","SquareVisuals","getSquareShape","state","vertices","addTriangle","getSquareMesh","SquareRepresentation","CreateTransformer","StateTransformer","builderFactory","CreateTube","name","display","from","PluginStateObject","Root","to","Representation3D","params","Numeric","Value","canAutoUpdate","oldParams","newParams","apply","plugin","a","Task","repr","webgl","canvas3d","representation","structure","themes","createOrUpdate","runInContext","source","label","CreateShape","require","DefaultViewerOptions","layoutIsExpanded","layoutShowControls","layoutShowRemoteState","layoutShowSequence","layoutShowLeftPanel","layoutControlsDisplay","disableAntialiasing","pixelScale","enableWboit","viewportShowExpand","viewportShowSelectionMode","viewportShowAnimation","MolstarDemoViewer","element","options","o","spec","DefaultPluginSpec","actions","behaviors","animations","customParamEditors","layout","initial","isExpanded","showControls","controlsDisplay","controls","top","undefined","left","right","bottom","components","remoteState","config","PluginConfig","Viewport","ShowExpand","ShowAnimation","ShowSelectionMode","this","createPlugin","format","clear","leftPanelTabName","next","builders","rawData","dataLabel","_data","parseTrajectory","trajectory","structureBuilder","createModel","model","createStructure","build","moleculeRepr","createStructureRepresentationParams","type","color","applyBuiltInSelection","StateTransforms","StructureRepresentation3D","commit","toRoot","Misc","CreateGroup","Viewer3D","viewerRef","useRef","useState","molstarPlugin","setMolstarPlugin","useLayoutEffect","current","useEffect","loadFigures","id","ref","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ad2653.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {ParamDefinition as PD} from \"molstar/lib/mol-util/param-definition\";\nimport {Representation, RepresentationContext, RepresentationParamsGetter} from \"molstar/lib/mol-repr/representation\";\nimport {Vec3} from \"molstar/lib/mol-math/linear-algebra/3d\";\nimport {MeshBuilder} from \"molstar/lib/mol-geo/geometry/mesh/mesh-builder\";\nimport {RuntimeContext} from \"molstar/lib/mol-task\";\nimport {addSphere} from \"molstar/lib/mol-geo/geometry/mesh/builder/sphere\";\nimport {addCylinder} from \"molstar/lib/mol-geo/geometry/mesh/builder/cylinder\";\nimport {ShapeRepresentation} from \"molstar/lib/mol-repr/shape/representation\";\nimport {Color} from \"molstar/lib/mol-util/color/color\";\nimport {Mesh} from \"molstar/lib/mol-geo/geometry/mesh/mesh\";\nimport {Shape} from \"molstar/lib/mol-model/shape/shape\";\nimport {DefaultCylinderProps} from \"molstar/lib/mol-geo/primitive/cylinder\";\n\n/* TUBE REPRESENTATION */\n\ninterface TubeData {\n  points: number[],\n  size: number\n  index: number\n}\n\nexport const TubeParams = {\n  ...Mesh.Params,\n  doubleSided: PD.Boolean(true)\n}\nexport type TubeParams = typeof TubeParams;\nexport type TubeProps = PD.Values<TubeParams>\n\nconst TubeVisuals = {\n  'mesh': (ctx: RepresentationContext, getParams: RepresentationParamsGetter<TubeData, TubeParams>) => ShapeRepresentation(getTubeShape, Mesh.Utils)\n}\n\nfunction getTubeMesh(data: TubeData, props: TubeProps, mesh?: Mesh) {\n  const builderState = MeshBuilder.createState(512, 256, mesh);\n  //if comment out addSphere, colors and interactivity work correct\n  const points = data.points;\n  for(let i = 0; i < points.length - 5; i+=3) {\n    addSphere(builderState, Vec3.create(points[i], points[i+1], points[i+2]), data.size, 3)\n    addCylinder(builderState,\n        Vec3.create(points[i], points[i+1], points[i+2]),\n        Vec3.create(points[i+3], points[i+4], points[i+5]),\n        1,\n        {...DefaultCylinderProps, radiusTop:data.size, radiusBottom: data.size}\n    )\n  }\n  const last_idx = data.points.length-3;\n  addSphere(builderState, Vec3.create(points[last_idx], points[last_idx+1], points[last_idx+2]), data.size, 3);\n\n  return MeshBuilder.getMesh(builderState);\n}\n\nfunction getTubeShape(ctx: RuntimeContext, data: TubeData, props: TubeProps, shape?: Shape<Mesh>) {\n    const geo = getTubeMesh(data, props, shape && shape.geometry);\n    return Shape.create(`Tube ${data.index}`, data, geo, () => Color.fromRgb(0, 255, 0), () => data.size, () => `Tube ${data.index}`);\n}\nexport type TubeRepresentation = Representation<TubeData, TubeParams>\n\nexport function TubeRepresentation(ctx: RepresentationContext, getParams: RepresentationParamsGetter<TubeData, TubeParams>): TubeRepresentation {\n  return Representation.createMulti('Tube', ctx, getParams, Representation.StateBuilder, TubeVisuals as unknown as Representation.Def<TubeData, TubeParams>)\n}\n\n/* SQUARE REPRESENTATION */\n\ninterface SquareData {\n  vertices: number[],\n  size: number\n  index: number\n}\n\nexport const SquareParams = {\n  ...Mesh.Params,\n  doubleSided: PD.Boolean(true)\n}\nexport type SquareParams = typeof SquareParams;\nexport type SquareProps = PD.Values<SquareParams>\n\nconst SquareVisuals = {\n  'mesh': (ctx: RepresentationContext, getParams: RepresentationParamsGetter<SquareData, SquareParams>) => ShapeRepresentation(getSquareShape, Mesh.Utils)\n}\n\nfunction getSquareMesh(data: SquareData, props: SquareProps, mesh?: Mesh) {\n  // Here I'm trying to create custom mesh from plain vertices array.\n  // Example array is simple square\n  const state = MeshBuilder.createState(256, 128, mesh);\n  for (let i = 0; i < data.vertices.length-8; i+=9) {\n    MeshBuilder.addTriangle(state,\n      Vec3.create(data.vertices[i], data.vertices[i + 1], data.vertices[i + 2]),\n      Vec3.create(data.vertices[i + 3], data.vertices[i + 4], data.vertices[i + 5]),\n      Vec3.create(data.vertices[i + 6], data.vertices[i + 7], data.vertices[i + 8]),\n    );\n  }\n  return MeshBuilder.getMesh(state);\n}\n\nfunction getSquareShape(ctx: RuntimeContext, data: SquareData, props: SquareProps, shape?: Shape<Mesh>) {\n    const geo = getSquareMesh(data, props, shape && shape.geometry);\n    return Shape.create(`Square ${data.index}`, data, geo, () => Color.fromRgb(0, 255, 0), () => data.size, () => `Square ${data.index}`);\n}\nexport type SquareRepresentation = Representation<SquareData, SquareParams>\n\nexport function SquareRepresentation(ctx: RepresentationContext, getParams: RepresentationParamsGetter<SquareData, SquareParams>): SquareRepresentation {\n  return Representation.createMulti('Square', ctx, getParams, Representation.StateBuilder, SquareVisuals as unknown as Representation.Def<SquareData, SquareParams>)\n}\n","import {PluginStateObject} from \"molstar/lib/mol-plugin-state/objects\";\nimport {PluginContext} from \"molstar/lib/mol-plugin/context\";\nimport {ParamDefinition as PD} from \"molstar/lib/mol-util/param-definition\";\nimport {StateTransformer} from \"molstar/lib/mol-state/transformer\";\nimport {Task} from \"molstar/lib/mol-task\";\n\nimport {\n    TubeRepresentation,\n    TubeParams,\n    SquareRepresentation,\n    SquareParams\n} from \"./representation\";\n\nconst CreateTransformer = StateTransformer.builderFactory('example-namespace');\n\nexport const CreateTube = CreateTransformer({\n    name: 'create-tube',\n    display: 'Tube',\n    from: PluginStateObject.Root,\n    to: PluginStateObject.Shape.Representation3D,\n    params: {\n        index: PD.Numeric(0),\n        points: PD.Value([] as number[]),\n        size: PD.Value(1.6)\n    }\n})({\n    canAutoUpdate({oldParams, newParams}) {\n        return true;\n    },\n    apply({a, params}, plugin: PluginContext) {\n        return Task.create('Tube', async ctx => {\n            const repr = TubeRepresentation({webgl: plugin.canvas3d?.webgl, ...plugin.representation.structure.themes}, () => TubeParams);\n            await repr.createOrUpdate({}, params).runInContext(ctx);\n            return new PluginStateObject.Shape.Representation3D({repr, source: a}, {label: `Tube ${params.index}`});\n        });\n    }\n});\n\n\nexport const CreateShape = CreateTransformer({\n    name: 'create-shape',\n    display: 'Shape',\n    from: PluginStateObject.Root,\n    to: PluginStateObject.Shape.Representation3D,\n    params: {\n        index: PD.Numeric(0),\n        vertices: PD.Value([] as number[]),\n        size: PD.Numeric(1.6)\n    }\n})({\n    canAutoUpdate({oldParams, newParams}) {\n        return true;\n    },\n    apply({a, params}, plugin: PluginContext) {\n        return Task.create('Shape', async ctx => {\n            const repr = SquareRepresentation({webgl: plugin.canvas3d?.webgl, ...plugin.representation.structure.themes}, () => SquareParams);\n            await repr.createOrUpdate({}, params).runInContext(ctx);\n            return new PluginStateObject.Shape.Representation3D({repr, source: a}, {label: `Square ${params.index}`});\n        });\n    }\n});","import \"molstar/lib/mol-util/polyfill\";\nimport { createPlugin, DefaultPluginSpec } from \"molstar/lib/mol-plugin\";\nimport { PluginContext } from \"molstar/lib/mol-plugin/context\";\nimport { PluginSpec } from \"molstar/lib/mol-plugin/spec\";\nimport { PluginLayoutControlsDisplay } from \"molstar/lib/mol-plugin/layout\";\nimport { PluginConfig } from \"molstar/lib/mol-plugin/config\";\nimport { BuiltInTrajectoryFormat } from \"molstar/lib/mol-plugin-state/formats/trajectory\";\nimport { createStructureRepresentationParams } from \"molstar/lib/mol-plugin-state/helpers/structure-representation-params\";\nimport { StateTransforms } from \"molstar/lib/mol-plugin-state/transforms\";\nimport {\n  applyBuiltInSelection,\n} from \"molstar/lib/mol-plugin-state/helpers/structure-selection-query\";\nimport { CreateTube, CreateShape } from \"./cubes/behavior\";\n\nrequire(\"molstar/lib/mol-plugin-ui/skin/light.scss\");\n\n\nconst DefaultViewerOptions = {\n  layoutIsExpanded: false,\n  layoutShowControls: true,\n  layoutShowRemoteState: false,\n  layoutShowSequence: true,\n  layoutShowLeftPanel: true,\n  layoutControlsDisplay: \"reactive\" as PluginLayoutControlsDisplay,\n  disableAntialiasing: false,\n  pixelScale: 1,\n  enableWboit: false,\n\n  viewportShowExpand: true,\n  viewportShowSelectionMode: false,\n  viewportShowAnimation: false\n};\ntype ViewerOptions = typeof DefaultViewerOptions;\n\nexport class MolstarDemoViewer {\n  plugin: PluginContext;\n\n  constructor(element: HTMLElement, options: Partial<ViewerOptions> = {}) {\n    const o = { ...DefaultViewerOptions, ...options };\n    const spec: PluginSpec = {\n      ...DefaultPluginSpec,\n      actions: [...DefaultPluginSpec.actions],\n      behaviors: [...DefaultPluginSpec.behaviors],\n      animations: [...DefaultPluginSpec.animations || []],\n      customParamEditors: DefaultPluginSpec.customParamEditors,\n      layout: {\n        initial: {\n          isExpanded: o.layoutIsExpanded,\n          showControls: o.layoutShowControls,\n          controlsDisplay: o.layoutControlsDisplay\n        },\n        controls: {\n          ...DefaultPluginSpec.layout && DefaultPluginSpec.layout.controls,\n          top: o.layoutShowSequence ? undefined : \"none\",\n          left: o.layoutShowLeftPanel ? undefined : \"none\",\n          right: \"none\",\n          bottom: \"none\"\n        }\n      },\n      components: {\n        ...DefaultPluginSpec.components,\n        remoteState: \"none\"\n      },\n      config: [\n        [PluginConfig.Viewport.ShowExpand, o.viewportShowExpand],\n        [PluginConfig.Viewport.ShowAnimation, o.viewportShowAnimation],\n        [PluginConfig.Viewport.ShowSelectionMode, o.viewportShowSelectionMode]\n      ]\n    }\n    this.plugin = createPlugin(element, spec);\n  }\n\n  async loadStructureFromData(data: string | ArrayBuffer, format: BuiltInTrajectoryFormat, options?: { dataLabel?: string }) {\n    await this.plugin.clear();\n    this.plugin.behaviors.layout.leftPanelTabName.next(\"data\");\n    const _data = await this.plugin.builders.data.rawData({ data, label: options?.dataLabel });\n    const trajectory = await this.plugin.builders.structure.parseTrajectory(_data, format);\n    const structureBuilder = this.plugin.builders.structure;\n    const model = await structureBuilder.createModel(trajectory);\n    if (!model) return;\n    const structure = await structureBuilder.createStructure(model);\n    const components = this.plugin.build().to(structure);\n    const moleculeRepr = createStructureRepresentationParams(this.plugin, void 0, {\n      type: 'ball-and-stick',\n      color: 'chain-id',\n      size: 'uniform'\n    });\n    await applyBuiltInSelection(components, 'backbone')\n      .apply(StateTransforms.Representation.StructureRepresentation3D, moleculeRepr).commit();\n  }\n\n  async loadFigures() {\n    const structure = this.plugin.build().toRoot();\n\n    const shapesGroup1 = structure.apply(StateTransforms.Misc.CreateGroup, { label: 'Group 1' })\n    shapesGroup1.apply(CreateTube, {\n      index: 1,\n      points: [0, 0, 0,\n               5, 7, 5,\n              10, 10, 10,\n              13, 16, 13],\n      size: 1.6\n    })\n\n    const shapesGroup2 = structure.apply(StateTransforms.Misc.CreateGroup, { label: 'Group 2' })\n    shapesGroup2.apply(CreateTube, {\n      index: 1,\n      points: [0, 0, 0,\n               5, 7, 5,\n              10, 10, 10,\n              13, 16, 13],\n      size: 1.6\n    })\n\n    structure.apply(CreateShape, {\n      index: 0,\n      vertices: [1, 1, 1,\n                 1, 10, 1,\n                 10, 10, 1,\n                 10, 10, 1,\n                 10, 1, 1, \n                 1, 1, 1],\n      size: 1\n    })\n    await structure.commit();\n  }\n}\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { MolstarDemoViewer } from \"./MolstarDemoViewer\";\n\n\nconst Viewer3D = () => {\n  const viewerRef = useRef<HTMLDivElement>(null);\n  const [molstarPlugin, setMolstarPlugin] = useState<MolstarDemoViewer | undefined>();\n\n  useLayoutEffect(() => {\n    if (viewerRef.current != null) {\n      setMolstarPlugin(new MolstarDemoViewer(viewerRef.current));\n    }\n  }, [])\n\n  useEffect(() => {\n    if (molstarPlugin) {\n        molstarPlugin.loadFigures();\n    }\n  }, [molstarPlugin]);\n\n\n  return (\n    <div id=\"viewer3d\" ref={viewerRef} />\n  )\n}\n\nexport default Viewer3D;\n","import logo from './logo.svg';\nimport './App.css';\nimport Viewer3D from './Viewer3D';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Viewer3D/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}